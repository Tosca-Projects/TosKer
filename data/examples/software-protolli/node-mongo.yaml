tosca_definitions_version: tosca_simple_yaml_1_0

description: >
  TOSCA simple profile with wordpress, web server and mysql on the same server.

repositories:
  docker_hub: https://registry.hub.docker.com/

imports:
  # - tosker: https://di-unipi-socc.github.io/tosker-types/tosker.yaml
  - tosker: ../../tosker-types.yaml

interface_types:
   my_software_interface:
      derived_from: tosca.interfaces.node.Root
      my_create:
        description: my create
      my_start:
        description: my start
      my_stop:
        description: my stop
      my_delete:
        description: my delete

node_types:
  my_software:
    derived_from: tosker.nodes.Software
    requirements:
      - my_connection:
          capability: tosca.capabilities.Endpoint
          node: tosker.nodes.Root
          relationship: tosca.relationships.ConnectsTo
    interfaces:
      my_interface:
        type: my_software_interface

topology_template:
  policies:
  - my_software_protocol:
      type: tosker.policies.Protocol
      targets: [ app ]
      properties:
        initial_state: deleted
        states:
          deleted:
          created:
            requires: [ host ]
            offers: [ host ]
          started:
            requires: [ host, my_connection ]
            offers: [ host ]
        transitions:
        - source: deleted
          target: created
          interface: my_software_interface
          operation: my_create
          requires: []
        - source: created
          target: deleted
          interface: my_software_interface
          operation: my_delete
          requires: []
        - source: created
          target: started
          interface: my_software_interface
          operation: my_start
          requires: []
        - source: started
          target: created
          interface: my_software_interface
          operation: my_stop
          requires: []
  
  node_templates:
    app:
      type: my_software
      artifacts:
        code: app/main.js
        package: app/package.json
      requirements:
        - host: node
        - my_connection: db
      interfaces:
        my_interface:
          my_create:
            implementation: app/install.sh
            inputs:
              package: { get_artifact: [ SELF, package ] }
              main: { get_artifact: [ SELF, code ] }
          my_start:
            implementation: app/start.sh
            inputs:
              port: 80
          my_stop:
            implementation: app/stop.sh
          my_delete:
            implementation: app/delete.sh
            inputs:
              package: { get_artifact: [ SELF, package ] }
              main: { get_artifact: [ SELF, code ] }

    db:
      type: tosker.nodes.Software
      requirements:
        - host: server_db
      interfaces:
        Standard:
          create:
            implementation: mongo/install.sh
          start:
            implementation: mongo/start.sh
          stop:
            implementation: mongo/stop.sh
          delete:
            implementation: mongo/delete.sh

    node:
      type: tosker.nodes.Software
      requirements:
        - host: server_app
      interfaces:
        Standard:
          create:
            implementation: install_node.sh
          delete:
            implementation: uninstall_node.sh

    server_app:
      type: tosker.nodes.Container
      properties:
        ports:
          80: 8080
      artifacts:
        my_image:
          file: ubuntu:latest
          type: tosker.artifacts.Image
          repository: docker_hub

    server_db:
      type: tosker.nodes.Container
      artifacts:
        my_image:
          file: ubuntu:latest
          type: tosker.artifacts.Image
          repository: docker_hub
